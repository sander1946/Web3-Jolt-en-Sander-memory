:root {
    --card-closed-color: #8ff357;
    --card-open-color: #438400;
    --card-found-color: #722c80;
    --card-text-color: white;
    --items-background-color: #d6fffe;
    --card-img-background-color: #0000002f;
    --card-img-closed-background-img: url(card-closed.png);
}

body {
    display: grid;
    grid-template-areas: 
        "header sidebar"
        "game-board sidebar"
    ;
    grid-template-columns: 90vw;
    grid-gap: 10px;
    max-width: 98vw;

}

.header-wrapper {
    grid-area: header;
    display: flex;
    justify-content: center;
}

.header {
    text-align: center; 
}

.sidebar-wrapper {
    grid-area: sidebar;
    display: flex;
    justify-content: center;
}

/* Board */
.game-board:not(:has(.card-container)) {
    grid-area: game-board;
    width: 100%;
    background-color:var(--items-background-color);
    padding: 10px;
    border-radius: 10px;
}

.game-board:has(.card-container) {
    grid-area: game-board;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;
    width: 100%;
    background-color:var(--items-background-color);
    padding: 10px;
    border-radius: 10px;
}

/* Cards */
.game-board .card-container {
    background-color: transparent;
}

.game-board .card-container .card-inner {
    position: relative;
    width: 100%;
    text-align: center;
    aspect-ratio: 1/1;
    border-radius: 10px;
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

.game-board .card-container .card-front {
    font-size: 20px;
    color: var(--card-text-color);
    background-size: contain;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.game-board .card-container .card-back {
    background-size: contain;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    border-radius: 10px;
    transform: rotateY(180deg);
    position: absolute;
    top: 7%;
    left: 7%;
    width: 86%;
    height: 86%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.game-board .card-container[data-card-status="closed"] .card-inner {
    background-color: var(--card-closed-color);
    cursor: pointer;
    transform: rotateY(0deg);
}

.game-board .card-container[data-card-status="open"] .card-inner {
    background-color: var(--card-open-color);
    cursor: default;
    transform: rotateY(180deg);
}

.game-board .card-container[data-card-status="found"] .card-inner {
    background-color: var(--card-found-color);
    cursor: default;
    transform: rotateY(180deg);
}

.top-vijf{
    background-color: var(--items-background-color);
    padding-top: 5px;
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 5px;
    border-radius: 10px;
}

.top-vijf h2{
    margin-top:0px;
    margin-bottom: 8px;
}

.top-vijf ol{
    margin: 0px;
}

.progressbar {
    position: relative;
    max-width: 500px;
    width: 100%;
    height: 10px;
    background: #274545;
    overflow: hidden;
    border-radius: 5px;
    margin: 0 auto;
}

span.progress {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    background: #326666;
    transition: all 1s linear;
    width: 0; /* this is the stating width */
}

@media (max-width: 300px) {
    body {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(2, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 300px) and (max-width: 400px) {
    body {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(3, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 400px) and (max-width: 500px) {
    body {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(4, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 500px) and (max-width: 750px) {
    body {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(5, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 750px) and (max-width: 1000px) {
    body {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(4, 1fr);
    }
}

@media (min-width: 1000px) and (max-width: 1200px) {
    body {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(5, 1fr);
    }
}

@media (min-width: 1200px) and (max-width: 1500px) {
    body {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(6, 1fr);
    }
}

@media (min-width: 1500px) {
    body {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: 1120px 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(7, 1fr);
    }
}