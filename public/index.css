:root {
    --header-color: #d6fffe;
    --card-closed-color: #8ff357;
    --card-open-color: #438400;
    --card-found-color: #722c80;
    --card-text-color: white;
    --items-background-color: #d6fffe;
    --card-img-background-color: #0000002f;
    --counter-background-color: #fa9200;
    --card-img-closed-background-img: url(card-closed.png);
}

.page-content {
    display: grid;
    grid-template-areas: 
        "header sidebar"
        "game-board sidebar"
    ;
    grid-template-columns: 90vw;
    grid-gap: 10px;
    max-width: 98vw;

}

.header-wrapper {
    grid-area: header;
    display: flex;
    justify-content: center;
    background-color: var(--header-color);

}

.header {
    text-align: center; 
}

.sidebar-wrapper {
    grid-area: sidebar;
    display: flex;
    justify-content: center;
}

.game-container {
    background-color: var(--items-background-color);
    padding: 10px;
    border-radius: 15px;
}

/* Board */
.game-board:not(:has(.card-container)) {
    grid-area: game-board;
    width: 100%;
    background-color:var(--items-background-color);
    padding: 10px 0;
    border-radius: 10px;
    margin: 0 auto;
}

.game-board:has(.card-container) {
    grid-area: game-board;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 10px;
    width: 100%;
    background-color:var(--items-background-color);
    padding: 10px 0;
    border-radius: 10px;
    margin: 0 auto;
}

/* Cards */
.game-board .card-container {
    background-color: transparent;
}

.game-board .card-container .card-inner {
    position: relative;
    width: 100%;
    text-align: center;
    aspect-ratio: 1/1;
    border-radius: 10px;
    transition: transform 0.6s;
    transform-style: preserve-3d;
}

.game-board .card-container .card-front {
    font-size: 20px;
    color: var(--card-text-color);
    background-size: contain;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.game-board .card-container .card-back {
    background-size: contain;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    border-radius: 10px;
    transform: rotateY(180deg);
    position: absolute;
    top: 7%;
    left: 7%;
    width: 86%;
    height: 86%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.game-board .card-container[data-card-status="closed"] .card-inner {
    background-color: var(--card-closed-color);
    cursor: pointer;
    transform: rotateY(0deg);
}

.game-board .card-container[data-card-status="open"] .card-inner {
    background-color: var(--card-open-color);
    cursor: default;
    transform: rotateY(180deg);
}

.game-board .card-container[data-card-status="found"] .card-inner {
    background-color: var(--card-found-color);
    cursor: default;
    transform: rotateY(180deg);
}

.pairs {
    background-color: var(--counter-img-background-color);
}

.sidebar h1 {
    margin-top:0px;
    margin-bottom: 8px;
}

.sidebar h2 {
    margin-top:0px;
    margin-bottom: 8px;
}

.sidebar ol {
    margin: 0px;
}

.sidebar button {
    width: 100%;
}

.sidebar hr {
    max-width: 95%;
}

.sidebar .legend-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.sidebar .legend-item label {
    text-align: left;
    flex: 1; /* Optional: makes label take up left space */
}

.sidebar input[type="color" i] {
    flex-shrink: 0; /* Prevents the input from shrinking */
    margin: 0 auto;
    border-radius: 25px;
    inline-size: 50px;
    block-size: 25px;
    
    /* Can set padding between outer circle and color swatch for Firefox here;
    * it doesn't support a color-swarch-wrapper pseudoclass
    */
    padding: 3px;
    border-width: 1px;
    border-style: solid;
    border-color: rgb(153, 153, 153);
}

/* Affects area between outer circle and color swatch. Firefox doesn't have an equivalent. */
.sidebar input[type="color" i]::-webkit-color-swatch-wrapper {
    padding: 1px;
}

/* Affects the inner circle, i.e. the current color selection */
.sidebar input[type="color" i]::-webkit-color-swatch {
    border-radius: 25px;
}

.sidebar input[type="color" i]::-moz-color-swatch {
    border-radius: 25px;
}


.leaderboard {
    background-color: var(--items-background-color);
    padding-top: 5px;
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 5px;
    border-radius: 10px;
    margin-bottom: 10px;
}

.legend {
    background-color: var(--items-background-color);
    padding-top: 5px;
    padding-left: 10px;
    padding-right: 10px;
    padding-bottom: 5px;
    border-radius: 10px;
    text-align: center;
}

.progressbar {
    position: relative;
    max-width: min(500px, 90vw);
    width: 100%;
    height: 10px;
    background: #274545;
    overflow: hidden;
    border-radius: 5px;
    margin: 0 auto;
}

span.progress {
    position: absolute;
    left: 0;
    top: 0;
    bottom: 0;
    background: #326666;
    transition: all 1s linear;
    width: 0; /* this is the stating width */
}

/* The Modal (background) */
.popup {
    display: none; /* Hidden by default */
    position: fixed; /* Stay in place */
    z-index: 1; /* Sit on top */
    padding-top: 100px; /* Location of the box */
    left: 0;
    top: 0;
    width: 100%; /* Full width */
    height: 100%; /* Full height */
    overflow: auto; /* Enable scroll if needed */
    background-color: rgb(0,0,0); /* Fallback color */
    background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
}

/* Modal Header */
.popup-header {
    margin: auto;
    width: 80%;
    padding: 20px;
    background-color: #fefefe;
    border: 1px solid #888;
}

/* The Close Button */
.close {
    color: #aaaaaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: #000;
    text-decoration: none;
    cursor: pointer;
}


/* Modal Content */
.popup-content {
    margin: auto;
    text-align: center;
}

@media (max-width: 300px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(2, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 300px) and (max-width: 400px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(3, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 400px) and (max-width: 500px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(4, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 500px) and (max-width: 750px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(5, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 750px) and (max-width: 1000px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(4, 1fr);
    }
}

@media (min-width: 1000px) and (max-width: 1200px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(5, 1fr);
    }
}

@media (min-width: 1200px) and (max-width: 1500px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(6, 1fr);
    }
}

@media (min-width: 1500px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: 1120px 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(7, 1fr);
    }
}