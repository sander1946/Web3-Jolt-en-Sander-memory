@import url("/index.css");

.page-content {
    display: grid;
    grid-template-areas: 
        "header"
        "login-container"
    ;
    grid-template-columns: 90vw;
    grid-gap: 10px;
    max-width: 98vw;
}

.login-container {
    background-color: var(--items-background-color);
    padding: 10px;
    border-radius: 15px;
}

@media (max-width: 300px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(2, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 300px) and (max-width: 400px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(3, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 400px) and (max-width: 500px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(4, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 500px) and (max-width: 750px) {
    .page-content {
        grid-template-areas: 
            "header"
            "game-board"
            "sidebar"
        ;
        grid-template-columns: 95vw;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(5, 1fr);
        max-width: 90vw;
    }
}

@media (min-width: 750px) and (max-width: 1000px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(4, 1fr);
    }
}

@media (min-width: 1000px) and (max-width: 1200px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(5, 1fr);
    }
}

@media (min-width: 1200px) and (max-width: 1500px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: calc(95vw - 380px) 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(6, 1fr);
    }
}

@media (min-width: 1500px) {
    .page-content {
        grid-template-areas: 
            "header header"
            "game-board sidebar"
        ;
        grid-template-columns: 1120px 360px;
        grid-template-rows: min-content;
        justify-content: center;
    }

    .game-board:has(.card-container) {
        grid-template-columns: repeat(7, 1fr);
    }
}